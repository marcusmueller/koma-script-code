% \CheckSum{731}
% \iffalse meta-comment
% ======================================================================
% scrcounter.dtx
% Copyright (c) Markus Kohm, 2012-2019
%
% This file is part of the LaTeX2e KOMA-Script bundle.
%
% This work may be distributed and/or modified under the conditions of
% the LaTeX Project Public License, version 1.3c of the license.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3c or later is part of all distributions of LaTeX 
% version 2005/12/01 or later and of this work.
%
% This work has the LPPL maintenance status "author-maintained".
%
% The Current Maintainer and author of this work is Markus Kohm.
%
% The KOMA-Script bundle consists of all files listed in manifest.txt.
% The work `scrwfile' consists of the files `scrcounter.dtx' and 
% `scrlogo.dtx'.
%
% If you're missing the installation batch file `scrcounter.ins', try
%    tex scrcounter.dtx
% to unpack all files. 
% The package documentation may be produced repeating
%    latex scrcounter.dtx
% at least three times.
% ----------------------------------------------------------------------
% scrcounter.dtx
% Copyright (c) Markus Kohm, 2012-2019
%
% Dieses Werk darf nach den Bedingungen der LaTeX Project Public Lizenz,
% Version 1.3c, verteilt und/oder veraendert werden.
% Die neuste Version dieser Lizenz ist
%   http://www.latex-project.org/lppl.txt
% und Version 1.3c ist Teil aller Verteilungen von LaTeX
% Version 2005/12/01 oder spaeter und dieses Werks.
%
% Dieses Werk hat den LPPL-Verwaltungs-Status "author-maintained"
% (allein durch den Autor verwaltet).
%
% Der Aktuelle Verwalter und Autor dieses Werkes ist Markus Kohm.
% 
% Das KOMA-Script-Paket besteht aus allen Dateien, die in manifest.txt
% genannt sind.
% Das Werk `scrwfile' besteht aus den Dateien `scrcounter.dtx' und
% `scrlogo.dtx'.
%
% Falls Sie die Installations-Batch-Datei `scrcounter.ins' vermissen,
% probieren Sie einfach einmal
%    tex scrcounter.dtx
% um alle Dateien auszupacken. Zur englischen Anleitung siehe den
% englischen Kommentar oben.
% ======================================================================
% \fi
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \iffalse^^A meta-comment
%%% From File: scrcounter.dtx
%<*dtx>
\def\LaTeXformat{LaTeX2e}
\ifx\fmtname\LaTeXformat % as long as this is a standalone package
\ProvidesFile{scrcounter.dtx}
%</dtx>
%<driver>\ProvidesFile{scrcounter.drv}
%<doc>\ProvidesFile{scrcounter.tex}
%<package&option>\NeedsTeXFormat{LaTeX2e}[2011/06/27]
%<package&option>\ProvidesPackage{scrcounter}
%<*dtx|driver|doc|package&option>
  [2012/04/07 v0.1-ALPHA LaTeX2e KOMA-Script package 
    (advanced counter handling)]
%</dtx|driver|doc|package&option>
%<*driver>
\documentclass{scrdoc}
\usepackage[english]{babel}
\usepackage{listings}
\lstnewenvironment{lstcode}[1][]{%
  \lstset{language=[LaTeX]TeX,basicstyle=\ttfamily\small,#1}%
}{}

\newcommand*{\Macro}{\cs}
\newcommand*{\Package}{\textsf}
\newcommand*{\PName}{\meta}
\newcommand*{\PValue}{\texttt}
\newcommand*{\Parameter}{\marg}
\newcommand*{\OParameter}{\oarg}
\newcommand*{\Option}{\texttt}
\newcommand*{\KOption}[1]{\Option{#1=}}
\newcommand*{\entry}[2]{\item[#1:] #2}
\newcommand*{\OptionValue}[2]{\Option{#1=#2}}

\CodelineIndex
\RecordChanges
\GetFileInfo{scrcounter.dtx}
\title{\KOMAScript{} \partname\ \texttt{\filename}%
  \footnote{This is version \fileversion\ of file \texttt{\filename}.}}
\date{\filedate}
\author{Markus Kohm}

\begin{document}
\maketitle
\DocInput{\filename}
%<driver>\end{document}
%</driver>
%<*dtx>
\expandafter\enddocument
\fi
%</dtx>
% \fi^^A meta-comment
% \changes{v0.1}{2012/04/24}{Begin of implementation}
% \changes{v0.1}{2012/05/07}{Begin of user documentation}
%
% \iffalse^^A meta-comment
\chapter[{Advanced Counter Handling Using \Package{scrcounter}}]
  {Advanced Counter Handling Using \Package{scrcounter}%
%  \footnote{This chapter has been generated from \File{scrcounter.dtx}.}%
}
\labelbase{scrcounter}
\BeginIndex{Package}{scrcounter}

% \fi^^A meta-comment
% \begin{abstract}
The standard counter handling of \LaTeX{} provides only \Macro{newcounter} to
generate a new counter, \Macro{addtocounter} to globally add any value to a
counter, \Macro{stepcounter} to globally increase a counter by one,
\Macro{refstepcounter} to do the same but also update the label reference,
\Macro{value} to use a counters value, \Macro{arabic}, \Macro{Alph},
\Macro{alph}, \Macro{Roman}, \Macro{roman}, and \Macro{fnsymbol} to show the
value of a counter as a Arabic number, alphabetic with upper case or lower
case letters, a Roman number in upper or lower case, or as footnote
symbols. \Macro{newcounter} additionally defines \Macro{the\PName{counter}},
the default output of the counter.

There's an additional internal command \Macro{@addtoreset} to add one counter
to the clear list of another one. But there isn't a user command for this and
there's a lack on user commands to locally change counters, change the
dependency or output of counters, manipulate the clear list of counters and so
on. Package \Package{scrcounter} fills in this blank.
% \end{abstract}
% \tableofcontents
%
% \StopEventually{\PrintIndex\PrintChanges}
%
\section{Modifications of the \LaTeX{} Kernel}
\label{sec:scrcounter.kernelpatches}

Beside the commands mentioned above, there's also an internal command
\Macro{p@\PName{counter}} to every counter.  This will be used as a prefix for
the counter, when generating the label reference at \Macro{refstepcounter}.
Usually this prefix is a real prefix, just placed before
\Macro{the\PName{counter}}.  But sometimes it would be useful to also have a
postfix. The \LaTeX{} team therefor redefine \Macro{refstepcounter} at package
\Package{varioref} to allow \Macro{the\PName{counter}} to be an argument of
\Macro{p@\PName{counter}}.  Package \Package{scrcounter} does the same
modification.  Because of this, \Package{scrcounter} should always be loaded
before \Package{hyperref}.

\paragraph{Note:} This has been implemented not yet!

\section{The Style and Value of a Counter}
\label{sec:scrcounter.style}

The style of a counter consists of several style elements:
\begin{description}
\item[numbering style] is the default output of a counter as part of
  \Macro{the\PName{counter}}.  You know the numbering style, e.\,g. from
  command \Macro{pagenumbering}.  If the counter has a parent, that will be
  shown as prefix by \Macro{the\PName{counter}}, this parent is not part of
  the numbering style.  In opposite to the \LaTeX{} kernel,
  \Package{scrcounter} stores the numbering style not only as part of the
  definition of \Macro{the\PName{counter}}, but also internally.  So it is
  provided not only to set it, but also to ask for it.
\item[clear list] is a internal stored list, that defines, which other counter
  should be reset to zero, whenever this counter will be increased.  In
  opposite to the \LaTeX{} kernel, \Package{scrcounter} uses the clear list
  not only while increasing a counter by one (\Macro{stepcounter} or
  \Macro{refstepcounter}) but also when changing the value by more then one or
  setting it newly using the \Package{scrcounter} manipulation interface.
\item[parent] is kind of prefix, that will be shown as part of the default
  counter output.  In the meaning of \Package{scrcounter} the parent is always
  another counter.
\item[separator] is a string, that will be placed between the parent and the
  counter at the default counter output.  It is used only, if there's a
  parent.  Without a parent, the separator will be omitted too.
\end{description}
Each of those style elements may be manipulated and requested by
\Package{scrcounter}, either one by one, or several together.  To make this
work, the default output of a counter has to be defined by the package.  This
will be done automatically by the first manipulation of the counter or it's
style.

Last but not least a counter has a value. Package \Package{scrcounter}
provides increasing and decreasing this value globally and locally, both with
setup of the label reference. The label reference is what would be shown by
\Macro{ref} to a label set by \Macro{label}. So, while \Macro{addtocounter}
and \Macro{stepcounter} won't change the label reference,
\Macro{refstepcounter} and value manipulations by \Package{scrcounter} will
do.

% \DescribeMacro{\modifycounter}
% The Command
% \iffalse^^A meta-comment
\begin{Declaration}
% \fi^^A meta-comment
  \Macro{modifycounter}\OParameter{modifications}\Parameter{counter}
% \iffalse^^A meta-comment
\end{Declaration}
\BeginIndex{Cmd}{modifycounter}%
This command
% \fi^^A meta-comment
may be used to do several modifications to a counter. The basic modification
is, to redefine \Macro{the\PName{counter}}. This makes it possible to provide
several extensions to the given \PName{counter}. This basic modification will
be done even, if the optional parameter \PName{modifications} has been omitted
or would be empty. This may result in an change of \Macro{the\PName{counter}}
to the defaults, if the counter hasn't been modified before. For more
information about the default, see the list of available modifications
% below
% \iffalse^^A meta-comment
in \autoref{tab:scrcounter.modifications}.
% \fi^^A meta-comment

The optional argument \PName{modifications} is a comma-separated list of
single modifications. Most of these have the syntax
\PName{key}\texttt{=}\PName{value}. Empty list elements and spaces between the
elements are allowed and will be ignored. If you have a comma or equal sign
inside of an \PName{value} you should put braces around the whole
\PName{value}.

%\begin{description}
% \iffalse^^A meta-comment
\begin{desclist}
  \desccaption{%
    Modifications provided by \Macro{modifycounter}%
    \label{tab:scrcounter.modifications}%
  }{%
    Modifications provided by \Macro{modifycounter} (\emph{continuation})%
  }%
% \fi^^A meta-comment
  \entry{\KOption{decrease}\PName{value}}{%
    decrease the counter by given \PName{value}. If the value has been
    omitted the counter will decrease by 1. Additionally the label reference
    will be set to the counter and the clear list of the counter will be
    processed.%
  }%
  \entry{\KOption{dontzero}\PName{other counter}}{%
    remove the \PName{other counter} from the clear list of the counter. See
    modification \Option{zero} for more information about the clear list.%
  }%
  \entry{\KOption{dontzeroby}\PName{other counter}}{%
    remove the counter from the clear list of the \PName{other counter}. See
    modification \Option{zeroby} for more information about the clear list.%
  }%
  \entry{\KOption{global}\PName{simple switch}}{%
    decision, whether or not to do the modifications globally. If the
    modification has been done inside a group or environment, global
    modifications
%   (\PName{simple switch} is either omitted, \PValue{true}, \PValue{on}, or
%   \PValue{yes})
    will be still valid after closing the group or environment, while
    non-global modifications
%   (\PName{simple switch} is either \PValue{false}, \PValue{off}, or
%   \PValue{no})
    will be valid only until the end of the group or environment has been
    reached. Default is \OptionValue{global}{true}.%
  }%
  \entry{\KOption{increase}\PName{value}}{%
    increase the counter by given \PName{value}. If the value has been
    omitted the counter will increase by 1. Additionally the label reference
    will be set to the counter and the clear list of the counter will be
    processed.%
  }%
  \entry{\KOption{local}\PName{simple switch}}{%
    decision, whether or not to do the modifications locally. If the
    modification has been done inside a group or environment, local
    modifications
%   (\PName{simple switch} is either omitted, \PValue{true}, \PValue{on}, or
%   \PValue{yes})
    won't be valid any longer after closing the group or environment, while
    non-local modifications
%   (\PName{simple switch} is either \PValue{false}, \PValue{off}, or
%   \PValue{no})
    will be still valid after the end of the group or environment has been
    reached. Internally this is same like using modification \Option{global}
    with opposite value. So default depends on the default of \Option{global}.
  }%
  \entry{\Option{nozeros}}{%
    empty the clear list of the counter. See modification \Option{zero} for
    more information about the clear list. Please note, that modification
    \Option{nozeros} does not expect any value.%
  }%
  \entry{\KOption{numbering}\PName{style}}{%
    declares the numbering \PName{style} of the number. Provided styles are
    \PName{gobble} (no number output), \PName{Alph}, \PName{alph},
    \PName{Roman}, \PName{roman}, and \PName{arabic}. See command
    \Macro{pagenumbering} for more information about those styles. Default is
    \PName{style} \PName{arabic}.%
  }%
  \entry{\KOption{parent}\PName{other counter}}{%
    adds the output of the given \PName{other counter} as a prefix to the
    output of the counter. You may know this, e.\,g., from the
    counter of \Macro{subsection}. If the parent is omitted or empty, no
    parent counter will be used. Default is no parent.%
  }%
  \entry{\KOption{separator}\PName{instructions}}{%
    adds \PName{instructions} after the output of a parent counter, if a
    parent counter has been declared and has not the style
    \PName{gobble}. If the \PName{instructions} are omitted or empty, no
    separator will be used. Please note, that \PName{instructions} will be
    expanded while modification. Default is a period.%
  }%
  \entry{\KOption{value}\PName{value}}{%
    set the counter to the given \PName{value}, that is mandatory and my not
    be omitted. Additionally the label reference will be set to the counter
    and the clear list of the counter will be processed.%
  }%
  \entry{\KOption{within}\PName{another counter}}{%
    this is a shortcut for \KOption{parent}\PName{another counter},
    \KOption{zeroby}\PName{another counter}.%
  }%
  \entry{\KOption{without}\PName{another counter}}{%
    this is a shortcut for \KOption{parent}\PName{}, but only if
    \PName{another counter} was the current parent, and
    \KOption{dontzeroby}\PName{another counter} independent from the current
    parent.%
  }%
  \entry{\KOption{zero}\PName{other counter}}{%
    add \PName{other counter} to the clear list of the counter. If a
    \PName{other counter} is at the clear list of the counter, the
    \PName{other counter} will be reset to 0, whenever \Macro{stepcounter} or
    \Macro{refstepcounter} for the counter is used, or whenever one of the
    modifications \Option{increase}, \Option{decrease}, or \Option{value} will
    be done to the counter}.%
  \entry{\KOption{zeroby}\PName{other counter}}{%
    add the counter to the clear list of the \PName{other counter}. If a
    counter is at the clear list of another one, the counter will be reset to
    0, whenever \Macro{stepcounter} or \Macro{refstepcounter} for the
    \PName{other counter} is used, or whenever one of the modifications
    \Option{increase}, \Option{decrease}, or \Option{value} will be done to
    the \PName{other counter}.%
  }%
% \iffalse^^A meta-comment
\end{desclist}
% \fi^^A meta-comment
%\end{description}

\textsc{Missing descriptions:}
\begin{itemize}
\item
\Macro{modifycountersatcleatlistof}\OParameter{modifications}\Parameter{counter}
\item
\Macro{modifycountersatcleatlistof*}\OParameter{modifications}\Parameter{counter}
\item
\Macro{styleofcounter}\OParameter{modifications}\Parameter{counter}
\end{itemize}
See the implementation documentation of the package
% at section~\ref{sec:implementation.package}
for information about those.

%
% \section{Implementation of the \texttt{docstrip} Driver}
% \label{sec:implementation.driver}
%
% The name of \texttt{docstrip} driver depends on how it has been run.  We
% have to use this not so nice construct because of this.
%    \begin{macrocode}
%<*dtx|ins>
%<*!ins>
% \fi
\def\batchfile{scrcounter.dtx}
%</!ins>
%<ins>\def\batchfile{scrcounter.ins}
%    \end{macrocode}
% After this, everything is usual:
%    \begin{macrocode}
\input docstrip.tex

\let\ifbeta\iftrue % without = it will not be replaced by release

\ifToplevel{\ifx\generate\undefined
    \errhelp{Install a new version of docstrip.}
    \errmessage{Old docstrip in input path}
    \batchmode
    \csname @@end\endcsname
  \fi
  \Msg{************************************************************}
  \Msg{*}
  \Msg{* KOMA-Script}
  \Msg{* a versatile LaTeX2e bundle}
  \Msg{*}
  \Msg{* This is `\batchfile', a batchfile to unpack some or all}
  \Msg{* parts of KOMA-Script. See `liesmich.txt' (german) or}
  \Msg{* `readme.txt' (english) for additional information.}
  \Msg{*}
  \Msg{* Files of an old KOMA-Script installation may be}
  \Msg{* overwritten without asking!}
  \Msg{*}
  \Msg{************************************************************}
}


% ---------- some docstrip switchs -------------------------------------

\ifToplevel{%
  \keepsilent
  \askforoverwritefalse
  \ifx\askonceonly\undefined\else\askonceonly\fi
}

% ---------- defining preambles ----------------------------------------

\preamble

Copyright (c) 2007-2012
Markus Kohm and any individual authors listed elsewhere in this file.

This file was generated from file(s) of the KOMA-Script bundle.
---------------------------------------------------------------

This work may be distributed and/or modified under the conditions of
the LaTeX Project Public License, version 1.3c of the license.
The latest version of this license is in
  http://www.latex-project.org/lppl.txt
and version 1.3c or later is part of all distributions of LaTeX
version 2005/12/01 or later and of this work.

This work has the LPPL maintenance status "author-maintained".

The Current Maintainer and author of this work is Markus Kohm.

This file may only be distributed together with the files
`scrlogo.dtx' and `scrcounter.dtx'. You may however distribute the files
`scrlogo.dtx' and `scrcounter.dtx' without this file. 
See also `scrcounter.dtx' for additional information.

If this file is a beta version, you are not allowed to distribute it.

Currently there is only a short english documentation at `scrcounter.dtx',
that should also be found as `scrcounter.pdf'.

The KOMA-Script bundle (but maybe not this file) was based upon the
LaTeX2.09 Script family created by Frank Neukam 1993 and the LaTeX2e
standard classes created by The LaTeX3 Project 1994-1996.

\endpreamble

% ---------- File generation -------------------------------------------

\generate{\usepreamble\defaultpreamble
  \file{scrcounter.ins}{%
    \from{scrcounter.dtx}{ins}%
  }%
  \file{scrcounter.drv}{%
    \from{scrcounter.dtx}{driver}%
  }%
  \file{scrcounter.sty}{%
    \from{scrcounter.dtx}{package,option}%
    \from{scrcounter.dtx}{package,body}%
    \from{scrlogo.dtx}{logo}%
  }%
}%

% ---------- end of docstrip process -----------------------------------

\ifToplevel{%
  \Msg{************************************************************}
  \Msg{*}
  \Msg{* KOMA-Script}
  \Msg{* a versatile LaTeX2e bundle}
  \Msg{*}
  \ifbeta
    \Msg{* THIS IS AN BETA VERSION. YOU SHOULD NOT INSTALL OR USE IT!}
    \Msg{* THERE MAY BE A LOT OF BUGS AT THIS VERSION!}
    \Msg{* PLEASE INSTALL THE RELEASE YOU CAN FIND AT CTAN!}
  \else
    \Msg{* To finish the installation you have to move some}
    \Msg{* files into a directory searched by TeX.}
    \Msg{* See INSTALL.TXT (english) or INSTALLD.TXT (german)}
    \Msg{* from KOMA-Script bundle for additional information.}
    \Msg{*}
    \Msg{* You may also produce the implementation documentation}
    \Msg{* including also a short version of the english manual.}
    \Msg{* To produce it, do}
    \Msg{* \space\space pdflatex scrcounter.dtx}
    \Msg{* \space\space mkindex scrcounter}
    \Msg{* \space\space pdflatex scrcounter.dtx}
    \Msg{* after finishing the installation.}
    \Msg{*}
    \Msg{* Happy TeXing}
  \fi
  \Msg{*}
  \Msg{************************************************************}
}

\bye
%</dtx|ins>
%    \end{macrocode}
%
% \section{Implementation of the Package}
% \label{sec:implementation.package}
%
% \iffalse^^A meta-comment
%<*package>
%<*option>
% \fi^^A meta-comment
% There are currently no options.
%    \begin{macrocode}
\ProcessOptions\relax
%    \end{macrocode}
% \iffalse^^A meta-comment
%</option>
%<*body>
% \fi^^A meta-comment
%
% The interface to optional arguments uses \textsf{scrbase} with
% \KOMAScript{} argument family.
%    \begin{macrocode}
\RequirePackage{scrbase}
\DefineFamily{KOMAarg}
%    \end{macrocode}
%
% \begin{macro}{\modifycounter}
%   The first argument is optional and defines the modifcation by a list of
%   keys.  The second argument is mandatory, the counter to be modified.
%   Independent from the optional argument the \cs{the\meta{counter}} will be
%   redefined using the \textsf{scrcounter} style.
%    \begin{macrocode}
\DefineFamilyMember[.modifycounter]{KOMAarg}
\newcommand*{\modifycounter}[2][]{%
  \scr@ifundefinedorrelax{c@#2}{\@nocounterr{#2}}{%
    \@ifundefined{scr@mf@s@#2}{%
      \expandafter\gdef\csname scr@mf@s@#2\endcsname{arabic}%
    }{}%
    \@ifundefined{scr@mf@ps@#2}{%
      \expandafter\gdef\csname scr@mf@ps@#2\endcsname{.}%
    }{}%
    \begingroup
      \def\scr@mf@doit{%
        \endgroup
        \edef\scr@mf@counter{#2}%
      }%
      \protected@edef\reserved@a{\noexpand
        \setkeys{KOMAarg.modifycounter}{#1}%
      }\reserved@a
      \if@scr@mf@global\l@addto@macro\scr@mf@doit{\expandafter\gdef}
      \else\l@addto@macro\scr@mf@doit{\expandafter\def}\fi
      \l@addto@macro{\scr@mf@doit}{%
        \csname the#2\endcsname{%
          \scr@ifundefinedorrelax{scr@mf@p@#2}{}{%
            \expandafter\ifx\csname scr@mf@p@#2\endcsname\@empty\else
              \csname the\csname scr@mf@p@#2\endcsname\endcsname
              \@nameuse{scr@mf@ps@#2}%
            \fi
          }%
          \csname @\csname scr@mf@s@#2\endcsname\expandafter\endcsname
          \csname c@#2\endcsname
        }%
      }
    \scr@mf@doit
  }%
}
%    \end{macrocode}
% \begin{macro}{\scr@mf@counter}
% \begin{macro}{\scr@mf@doit}
%   Helpers to store the counter to be modified and the modification command.
%    \begin{macrocode}
\newcommand*{\scr@mf@counter}{}
\newcommand*{\scr@mf@doit}{}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{option}{global}
%   Do the job global (default).
%    \begin{macrocode}
\FamilyBoolKey[.modifycounter]{KOMAarg}{global}{@scr@mf@global}
\@scr@mf@globaltrue
%    \end{macrocode}
% \end{option}
% \begin{option}{local}
%   Do the job local.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{local}[true]{%
  \if@scr@mf@global\expandafter\@scr@mf@globalfalse
  \else\expandafter\@scr@mf@globaltrue\fi
  \FamilySetBool{KOMAarg}{local}{@scr@mf@global}{#1}%
  \if@scr@mf@global\expandafter\@scr@mf@globalfalse
  \else\expandafter\@scr@mf@globaltrue\fi
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{increase}
%   Increase the counter by one or more and call the clearlist of the counter.
%   Note, that the increase value will be used as a \cs{numexpr}
%   expression. So simple calculations are available.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{increase}[1]{%
  \if@scr@mf@global\l@addto@macro\scr@mf@doit\global\fi
  \l@addto@macro\scr@mf@doit{%
    \advance \csname c@\scr@mf@counter\endcsname \numexpr#1\relax\relax
    \begingroup
  }%
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{\let\@elt\@stpelt}%
  \else
    \l@addto@macro\scr@mf@doit{\let\@elt\scr@l@stpelt}%
  \fi
  \l@addto@macro\scr@mf@doit{\csname cl@\scr@mf@counter\endcsname
    \endgroup
  }%
}
%    \end{macrocode}
% \begin{macro}{\scr@l@stpelt}
%   Same like \cs{@stpelt} but not \cs{global}. Note, that this has to be
%   called inside of a group!
%    \begin{macrocode}
\newcommand*{\scr@l@stpelt}[1]{%
  \expandafter\aftergroup\csname c@#1\endcsname\aftergroup\z@
}
%    \end{macrocode}
% \end{macro}
% \end{option}
%
% \begin{option}{decrease}
%  Same like option \texttt{increase} with negative value.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{decrease}[1]{%
  \if@scr@mf@global\l@addto@macro\scr@mf@doit\global\fi
  \l@addto@macro\scr@mf@doit{%
    \advance \csname c@\scr@mf@counter\endcsname 
    \numexpr-\numexpr#1\relax\relax\relax
    \begingroup
  }%
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{\let\@elt\@stpelt}%
  \else
    \l@addto@macro\scr@mf@doit{\let\@elt\scr@l@stpelt}%
  \fi
  \l@addto@macro\scr@mf@doit{\csname cl@\scr@mf@counter\endcsname
    \endgroup
  }%
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{value}
%   Same like option \texttt{increase} set to an absolute value (and process
%   the clear list).
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{value}{%
  \if@scr@mf@global\l@addto@macro\scr@mf@doit\global\fi
  \l@addto@macro\scr@mf@doit{%
    \csname c@\scr@mf@counter\endcsname 
    \numexpr#1\relax\relax
    \begingroup
  }%
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{\let\@elt\@stpelt}%
  \else
    \l@addto@macro\scr@mf@doit{\let\@elt\scr@l@stpelt}%
  \fi
  \l@addto@macro\scr@mf@doit{\csname cl@\scr@mf@counter\endcsname
    \endgroup
  }%
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{zeroby}
% \begin{macro}{\scr@l@addtoreset}
% \begin{macro}{\scr@@addtoreset}
%   Add a counter to the clear list of another one.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{zeroby}{%
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{%
      \scr@removefromreset{\scr@mf@counter}{#1}%
      \@addtoreset{\scr@mf@counter}{#1}%
    }%
  \else
    \l@addto@macro\scr@mf@doit{%
      \scr@l@removefromreset{\scr@mf@counter}{#1}%
      \scr@l@addtoreset{\scr@mf@counter}{#1}%
    }%
  \fi
}
\newcommand*{\scr@l@addtoreset}[2]{%
  \expandafter\let\expandafter\scr@@addtoreset\csname cl@#2\endcsname
  \@cons\scr@@addtoreset{{#1}}%
  \expandafter\let\csname cl@#2\endcsname\scr@@addtoreset
}
\newcommand*{\scr@@addtoreset}{}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{option}{zeroby}
%
% \begin{option}{zero}
%   Add a counter to the clear list this counter.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{zero}{%
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{%
      \@addtoreset{#1}{\scr@mf@counter}%
    }%
  \else
    \l@addto@macro\scr@mf@doit{%
      \scr@l@addtoreset{#1}{\scr@mf@counter}%
    }%
  \fi
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{dontzeroby}
%   Remove a counter from the clear list of another one, if it was there.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{dontzeroby}{%
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{%
      \scr@removefromreset{\scr@mf@counter}{#1}%
    }%
  \else
    \l@addto@macro\scr@mf@doit{%
      \scr@l@removefromreset{\scr@mf@counter}{#1}%
    }%
  \fi
}
\newcommand*{\scr@removefromreset}[2]{%
  \begingroup
    \expandafter\let\expandafter\scr@@addtoreset\csname cl@#2\endcsname
    \expandafter\global\expandafter\let\csname cl@#2\endcsname\@empty
    \def\@elt##1{%
      \ifstr{##1}{#1}{}{%
        \expandafter\@cons\csname cl@#2\endcsname{{##1}}%
      }%
    }%
    \scr@@addtoreset
  \endgroup
}
\newcommand*{\scr@l@removefromreset}[2]{%
  \let\scr@@addtoreset\@empty
  \begingroup
    \def\@elt##1{%
      \ifstr{##1}{#1}{}{%
        \@cons\scr@@addtoreset{{##1}}%
      }%
    }%
    \csname cl@#2\endcsname
  \endgroup
  \expandafter\let\csname cl@#2\endcsname\scr@@addtoreset
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{dontzero}
%   Remove another counter from the clear list of this one, if it was there.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{dontzero}{%
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{%
      \scr@removefromreset{#1}{\scr@mf@counter}%
    }%
  \else
    \l@addto@macro\scr@mf@doit{%
      \scr@l@removefromreset{#1}{\scr@mf@counter}%
    }%
  \fi
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{nozeros}
%   Reset the clear list of this counter.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{nozeros}[\relax]{%
  \ifx\relax#1\relax\else
    \PackageError{scrcounter}{unknown value to option `nozeros'}{%
      Option `nozeros' doesn't know values, but you've used it with
      value\MessageBreak
      `\detokenize{#1}'.\MessageBreak
      If you'll continue, the value will be ignored.}%
  \fi
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{%
      \expandafter\global\expandafter\let\csname cl@\scr@mf@counter\endcsname
      \@empty
    }%
  \else
    \l@addto@macro\scr@mf@doit{%
      \expandafter\let\csname cl@\scr@mf@counter\endcsname\@empty
    }%
  \fi
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{numbering}
%   This changes the style of the counter numbering. See \cs{pagenumbering}
%   for more information about available styles. Changing the style will not
%   set the counter!
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{numbering}{%
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{%
      \expandafter\gdef\csname scr@mf@s@\scr@mf@counter\endcsname{#1}%
    }%
  \else
    \l@addto@macro\scr@mf@doit{%
      \expandafter\def\csname scr@mf@s@\scr@mf@counter\endcsname{#1}%
    }%
  \fi
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{parent}
%   This changes the parent of the counter (used by style). Changing the
%   parent will not reset the counter.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{parent}[]{%
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{%
      \expandafter\xdef\csname scr@mf@p@\scr@mf@counter\endcsname{#1}%
    }%
  \else
    \l@addto@macro\scr@mf@doit{%
      \expandafter\edef\csname scr@mf@p@\scr@mf@counter\endcsname{#1}%
    }%
  \fi
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{separator}
%   This changes the separator between the parent and the counter.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{separator}[]{%
  \if@scr@mf@global
    \l@addto@macro\scr@mf@doit{%
      \expandafter\gdef\csname scr@mf@ps@\scr@mf@counter\endcsname{#1}%
    }%
  \else
    \l@addto@macro\scr@mf@doit{%
      \expandafter\def\csname scr@mf@ps@\scr@mf@counter\endcsname{#1}%
    }%
  \fi
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{within}
%   This is just a shortcut for \texttt{parent=\#1} and
%   \texttt{zeroby=\#1}. This may be combined with \texttt{numbering},
%   \texttt{separator} etc.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{within}{%
  \csname KV@KOMAarg.modifycounter@parent\endcsname{#1}%
  \csname KV@KOMAarg.modifycounter@zeroby\endcsname{#1}%
}
%    \end{macrocode}
% \end{option}
%
% \begin{option}{without}
%   This is just a shortcut for \texttt{parent} and
%   \texttt{nozeroby=\#1}. This may be combined with \texttt{numbering},
%   \texttt{separator} etc.
%    \begin{macrocode}
\DefineFamilyKey[.modifycounter]{KOMAarg}{without}{%
  \ifstr{\csname KV@KOMAarg.modifycounter@parent\endcsname}{#1}{%
    \csname KV@KOMAarg.modifycounter@parent\endcsname{}%
  }{}%
  \csname KV@KOMAarg.modifycounter@dontzeroby\endcsname{#1}%
}
%    \end{macrocode}
% \end{option}
% \end{macro}%^^A \modifycounter
%
% \begin{macro}{\styleofcounter}
%   This gets the style of a counter like it may be used by
%   \cs{modifycounter}.  The optional, first argument may be used to restrict
%   the style attributes.  Default is everything but the value of the
%   counter.  The mandatory, second argument is the counter.
%    \begin{macrocode}
\DefineFamilyMember[.styleofcounter]{KOMAarg}
\newcommand*{\styleofcounter}[2][default]{%
  \let\scr@soc@macro\relax
  \setkeys{KOMAarg.styleofcounter}{%
    global,%
    numbering=false,parent=false,separator=false,value=false,zero=false,#1}%
  \def\scr@soc@list{\@gobble}%
  \if@scr@soc@numbering
    \edef\scr@soc@list{\scr@soc@list,numbering=%
      \scr@ifundefinedorrelax{scr@mf@s@#2}{arabic}{%
        \expandafter\ifx\csname scr@mf@s@#2\endcsname\@empty arabic%
        \else \csname scr@mf@s@#2\endcsname\fi
      }%
    }%
  \fi
  \if@scr@soc@parent
    \edef\scr@soc@list{\scr@soc@list,parent=%
      \scr@ifundefinedorrelax{scr@mf@p@#2}{}{\csname scr@mf@p@#2\endcsname}%
    }%
  \fi
  \if@scr@soc@separator
    \edef\scr@soc@list{\scr@soc@list,separator=%
      \scr@ifundefinedorrelax{scr@mf@ps@#2}{}{\csname scr@mf@ps@#2\endcsname}%
    }%
  \fi
  \if@scr@soc@value
    \edef\scr@soc@list{\scr@soc@list,value=\the\value{#2}}%
  \fi
  \if@scr@soc@zero
    \begingroup
      \def\@elt##1{,zero=##1}%
      \edef\reserved@a{\csname cl@#2\endcsname}%
      \edef\reserved@a{%
        \noexpand\endgroup
        \noexpand\edef\noexpand\scr@soc@list{\noexpand\scr@soc@list\reserved@a
        }%
      }%
    \reserved@a
  \fi
  \edef\scr@soc@list{\scr@soc@list\@empty}%
  \ifx\scr@soc@macro\relax
    \scr@soc@list
  \else
    \if@scr@soc@global\expandafter\global\fi
    \expandafter\let\csname \scr@soc@macro\endcsname
    \scr@soc@list
  \fi
}
%    \end{macrocode}
% \begin{option}{default}
%   Set options \texttt{numbering}, \texttt{parent}, \texttt{separator},
%   \texttt{zero}.
%   \begin{macrocode}
\DefineFamilyKey[.styleofcounter]{KOMAarg}{default}[\relax]{%
  \ifx\relax#1\relax\else
    \PackageError{scrcounter}{unknown value to option `default'}{%
      Option `default' doesn't know values, but you've used it with
      value\MessageBreak
      `\detokenize{#1}'.\MessageBreak
      If you'll continue, the value will be ignored.}%
  \fi
  \setkeys{KOMAarg.styleofcounter}{numbering,parent,separator,zero}%
}
%    \end{macrocode}
% \end{option}
%
% \begin{macro}{\@maybeautodot}
% \begin{macro}{\@@maybeautodot}
%   Because of the complicated \cs{the}\meta{counter} definitions we have to
%   modify internal \KOMAScript{} commands \cs{@maybeautodot} and
%   \cs{@@maybeautodot}. This modification would be usefull at all and
%   therefor may become part of the \KOMAScript{} classes itself.
%    \begin{macrocode}
\scr@ifundefinedorrelax{@maybeautodot}{}{%
  \renewcommand{\@maybeautodot}[1]{\if@autodot\else\begingroup%
    \begingroup
    \let\@Alph\relax
    \let\@alph\relax
    \let\@Roman\relax
    \let\@roman\relax
    \let\romannumeral\relax
    \expandafter\edef\expandafter\@tempa\expandafter{#1}%
    \expandafter\expandafter\expandafter\endgroup
    \expandafter\@@maybeautodot \@tempa\@stop\endgroup\fi
  }%
}
\scr@ifundefinedorrelax{@@maybeautodot}{}{%
  \renewcommand*{\@@maybeautodot}[1]{%
    \ifx #1\@stop\let\@@maybeautodot\relax
    \else
      \ifx #1\@Alph \@autodottrue\fi
      \ifx #1\@alph \@autodottrue\fi
      \ifx #1\@Roman \@autodottrue\fi
      \ifx #1\@roman \@autodottrue\fi
      \ifx #1\romannumeral \@autodottrue\fi
    \fi
    \@@maybeautodot
  }%
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
%
% \begin{option}{macro}
%   Define the given macro with the style.
%    \begin{macrocode}
\DefineFamilyKey[.styleofcounter]{KOMAarg}{macro}{%
  \def\scr@soc@macro{#1}%
}
%    \end{macrocode}
% \end{option}
% \begin{option}{numbering}
%   Get the numbering style.
%    \begin{macrocode}
\FamilyBoolKey[.styleofcounter]{KOMAarg}{numbering}{@scr@soc@numbering}
%    \end{macrocode}
% \end{option}
% \begin{option}{parent}
%   Get the parent.
%    \begin{macrocode}
\FamilyBoolKey[.styleofcounter]{KOMAarg}{parent}{@scr@soc@parent}
%    \end{macrocode}
% \end{option}
% \begin{option}{separator}
%   Get the separator.
%    \begin{macrocode}
\FamilyBoolKey[.styleofcounter]{KOMAarg}{separator}{@scr@soc@separator}
%    \end{macrocode}
% \end{option}
% \begin{option}{value}
%   Get the value.
%    \begin{macrocode}
\FamilyBoolKey[.styleofcounter]{KOMAarg}{value}{@scr@soc@value}
%    \end{macrocode}
% \end{option}
% \begin{option}{zero}
%   Get the clear list of the counter.
%    \begin{macrocode}
\FamilyBoolKey[.styleofcounter]{KOMAarg}{zero}{@scr@soc@zero}
%    \end{macrocode}
% \end{option}
% \begin{option}{global}
%   Do the job global (default).
%    \begin{macrocode}
\FamilyBoolKey[.styleofcounter]{KOMAarg}{global}{@scr@soc@global}
\@scr@soc@globaltrue
%    \end{macrocode}
% \end{option}
% \begin{option}{local}
%   Do the job local.
%    \begin{macrocode}
\DefineFamilyKey[.styleofcounter]{KOMAarg}{local}[true]{%
  \if@scr@soc@global\expandafter\@scr@soc@globalfalse
  \else\expandafter\@scr@soc@globaltrue\fi
  \FamilySetBool{KOMAarg}{local}{@scr@soc@global}{#1}%
  \if@scr@soc@global\expandafter\@scr@soc@globalfalse
  \else\expandafter\@scr@soc@globaltrue\fi
}
%    \end{macrocode}
% \end{option}
% \end{macro}%^^A \styleofcounter
%
% \begin{macro}{\modifycountersatclearlistof}
% \begin{macro}{\@modifycountersatclearlistof}
% \begin{macro}{\if@scr@mf@recursive}
% \begin{macro}{\parentofcounter}
%   Modify all the counters within the clear list of a counter. Star version
%   works recursive.
%    \begin{macrocode}
\newif\if@scr@mf@recursive
\newcommand*{\modifycountersatclearlistof}{%
  \@ifstar {\@scr@mf@recursivetrue\@modifycountersatclearlistof}%
           {\@scr@mf@recursivefalse\@modifycountersatclearlistof}%
}
\newcommand*{\parentofcounter}{}
\newcommand*{\@modifycountersatclearlistof}[2][]{%
  \begingroup
    \def\reserved@a{\endgroup}%
    \def\@elt##1{%
      \if@scr@mf@recursive
        \l@addto@macro\reserved@a{%
          \modifycountersatclearlistof[#1]{##1}%
        }%
      \fi
      \l@addto@macro\reserved@a{%
        \def\parentofcounter{#2}%
        \modifycounter[#1]{##1}%
      }%
    }%
    \csname cl@#2\endcsname
  \reserved@a
}
%    \end{macrocode}
% \end{macro}
% \end{macro}
% \end{macro}
% \end{macro}%^^A \modifycountersatclearlistof
%
% \iffalse^^A meta-comment
%</body>
%</package>
% \fi
%
% \Finale
%
\endinput
%
% end of file `scrcounter.dtx'
%%% Local Variables:
%%% mode: doctex
%%% coding: us-ascii
%%% TeX-master: t
%%% End:
