% \CheckSum{0}
% \iffalse meta-comment
% ======================================================================
% scrkxflo.dtx
% Copyright (c) Markus Kohm, 2004-2019
%
% This file is part of the LaTeX2e KOMA-Script bundle.
%
% This work may be distributed and/or modified under the conditions of
% the LaTeX Project Public License, version 1.3c of the license.
% The latest version of this license is in
%   http://www.latex-project.org/lppl.txt
% and version 1.3c or later is part of all distributions of LaTeX 
% version 2005/12/01 or later and of this work.
%
% This work has the LPPL maintenance status "author-maintained".
%
% The Current Maintainer and author of this work is Markus Kohm.
%
% This work consists of all files listed in manifest.txt.
% ----------------------------------------------------------------------
% scrkxflo.dtx
% Copyright (c) Markus Kohm, 2004-2019
%
% Dieses Werk darf nach den Bedingungen der LaTeX Project Public Lizenz,
% Version 1.3c, verteilt und/oder veraendert werden.
% Die neuste Version dieser Lizenz ist
%   http://www.latex-project.org/lppl.txt
% und Version 1.3c ist Teil aller Verteilungen von LaTeX
% Version 2005/12/01 oder spaeter und dieses Werks.
%
% Dieses Werk hat den LPPL-Verwaltungs-Status "author-maintained"
% (allein durch den Autor verwaltet).
%
% Der Aktuelle Verwalter und Autor dieses Werkes ist Markus Kohm.
% 
% Dieses Werk besteht aus den in manifest.txt aufgefuehrten Dateien.
% ======================================================================
% \fi
%
% \CharacterTable
%  {Upper-case    \A\B\C\D\E\F\G\H\I\J\K\L\M\N\O\P\Q\R\S\T\U\V\W\X\Y\Z
%   Lower-case    \a\b\c\d\e\f\g\h\i\j\k\l\m\n\o\p\q\r\s\t\u\v\w\x\y\z
%   Digits        \0\1\2\3\4\5\6\7\8\9
%   Exclamation   \!     Double quote  \"     Hash (number) \#
%   Dollar        \$     Percent       \%     Ampersand     \&
%   Acute accent  \'     Left paren    \(     Right paren   \)
%   Asterisk      \*     Plus          \+     Comma         \,
%   Minus         \-     Point         \.     Solidus       \/
%   Colon         \:     Semicolon     \;     Less than     \<
%   Equals        \=     Greater than  \>     Question mark \?
%   Commercial at \@     Left bracket  \[     Backslash     \\
%   Right bracket \]     Circumflex    \^     Underscore    \_
%   Grave accent  \`     Left brace    \{     Vertical bar  \|
%   Right brace   \}     Tilde         \~}
%
% \iffalse
%%% From File: scrkxflo.dtx
%<*driver>
% \fi
\ProvidesFile{scrkxflo.dtx}[2004/01/04 v2.95 KOMA-Script (TEMPLATE)]
% \iffalse
\begin{filecontents*}{scrxfloat.ins}
  \def\batchfile{scrxfloat.ins}
  \input docstrip.tex
  \generate{\file{scrxfloat.sty}{%
      \from{scrbeta.dtx}{package,scrxfloat}%
      \from{scrkvers.dtx}{package,scrxfloat}%
      \from{scrkxflo.dtx}{package,identify}%
      \from{scrkbase.dtx}{load}%
      \from{scrkxflo.dtx}{package,option,body}%
      \from{scrlogo.dtx}{logo}%
    }%
  }
\end{filecontents*}
\documentclass{scrdoc}
\usepackage[english,ngerman]{babel}
\usepackage[latin1]{inputenc}
\CodelineIndex
\RecordChanges
\GetFileInfo{scrkxflo.dtx}
\title{\KOMAScript{} \partname\ \texttt{\filename}%
  \footnote{Dies ist Version \fileversion\ von Datei \texttt{\filename}.}}
\date{\filedate}
\author{Markus Kohm}

\begin{document}
  \maketitle
  \tableofcontents
  \DocInput{\filename}
\end{document}
%</driver>
% \fi
%
% \selectlanguage{ngerman}
%
% \changes{v2.95}{2004/01/04}{%
%   erste Version aus der Aufteilung von \textsf{scrclass.dtx}}
%
% \section{Neue Gleitumgebungs Makros}
%
% Dieser Teil enthält alle Definitionen, die für die neuen Gleitumgebungen
% wichtig sind. Diese bauen zwar intern noch auch den Möglichkeiten von
% \LaTeXe{} auf, im Benutzerinterface bleibt davon aber nichts übrig. Es wird
% lediglich kein Eingriff in die Output-Routine von \LaTeX{} benötigt.
%
% Da das Konzept neu ist, wird es hier zunächst auch beschrieben. Später soll
% daraus dann ein entsprechender Abschnitt in der \KOMAScript-Anleitung
% entstehen.
%
% Bisher verfügt \LaTeX{} über einen einfachen Mechanismus, um Gleitumgebungen
% zu definieren. Dabei können unterschiedliche Arten von Gleitumgebungen über
% eine nummerische Angabe von einander unabhängig gemacht werden. Jede
% Gleitumgebung kann einen Unterschrift enthalten. Andere Platzierungen von
% Erläuterungen sind nicht vorgesehen. Ebenfalls kann die Umgebung nicht
% einfach auch nichtgleitend verwendet werden, bzw. verschiedene Umgebungen
% zusammen gleiten (etwa eine Tabelle und eine dazu gehörende Abbildung). Um
% derartiges zu lösen, werden immer Tricks benötigt.
%
% \subsection{Anforderungen}
%
% And die Gleitumgebungen von \KOMAScript{} werden folgende Anforderungen
% gestellt:
% \begin{itemize}
% \item Umgebungen sollen wahlweise gleiten.
% \item Standardgleitverhalten soll einfach global oder lokal geändert werden
%   können.
% \item Unterschiedliche und gleiche Gleitumgebungen sollen gemischt werden
%   können.
% \item Es sind mehrere Ebenen von Gleitumgebungen zu unterstützen.
% \item Eine Gleitumgebung verfügt wahlweise über eine Erklärung.
% \item Die Erklärung zur Gleitumgebung kann eine von min. vier optionalen
%   Positionen einnehmen.
% \item Die Darstellung der Erklärung ist variabel.
% \item Neue Gleitumgebungen mit optionalem Verzeichnis sind einfach zu
%   definieren.
% \end{itemize}
%
% Zur Verwirklichung der Anforderungen bekommen Gleitumgebungen einen Satz
% neuer Optionen. Selbstverständlich werden diese per \textsf{keyval}
% definiert. Viele dieser Optionen können bei der Definition einer
% Gleitumgebung angegeben werden, um den Standard zu definieren. Sie können
% beim Aufruf der Gleitumgebung angegeben werden, um eine Abweichung von
% Standard anzugeben. Sie können auch getrennt von der Definition oder einem
% Aufruf angegeben werden, um die aktuelle Voreinstellung zu ändern.
%
% Da die Gleitumgebung auch nichtgleitend verwendet werden können soll, sei im
% Folgenden stattdessen von einer Konsultationsumgebung die Rede. Der Name
% kommt daher, dass in solchen Umgebungen Elemente platziert werden sollen,
% die nicht sequentiell mit dem restlichen Text gelesen, sondern unabhängig
% davon konsultiert werden.
%
%
% \subsection{Die Basisumgebung}
% \label{sec:consult.base}
%
% \DescribeEnv{consultation}
% Die Basisumgebung ist sozusagen der Prototyp einer Konsultationsumgebung. Er
% ermöglichst bereits alles, was eine Gleitumgebung bietet. So lange die
% Umgebung nicht ausreichend spezialisiert wird, kann sie jedoch nur andere
% Konsultationsumgebungen enthalten. Die Erklärung zu einer
% Konsulationtsumgebung enthält weder Titel noch Nummer. Der Aufruf erfolgt
% wie folgt:
% \begin{quote}\raggedright
% \cs{begin\{consultation\}}\oarg{Optionen}\\
% \meta{Konsultationstext}\\
% \cs{end\{consultation\}}
% \end{quote}
%
% Die Optionen legen dabei das Aussehen der Konsultationsumgebung, deren
% Gleiteigenschaften sowie ihre Erklärung fest. Je nachdem, welche Angaben
% getroffen werden, ist die Umgebung mehr oder weniger stark
% spezialisiert. Eine Vereinfachung im Umgang, die dann auch eine stärkere
% Trennung von Form und Inhalt darstellt, wird später erklärt.
%
% \subsection{Eigenschaften der Konsulationsumgebung}
% \label{sec:consult.properties}
%
% Die Eigenschaften der Konsulationsumgebung werden über
% \textsf{keyva}-Optionen festgelegt. Diese werden im Folgenden beschrieben:
%
% \DescribeOption{class}
% Über einen Aufruf der Form \texttt{class=}\meta{Name} wird die
% Konsultationsklasse der Konsulationsumgebung festgegelt. Die Angabe eines
% Wertes ist dabei zwingend. Vorausgesetzt die entsprechende
% Konsultationsklasse ist definiert (siehe Abschnitt~\ref{sec:consult.class}),
% ist damit die Konsultationsumgebung vollständig spezialisiert. Alle anderen
% Optionen geben Abweichungen von der Voreinstellung an. Eine alternative, vom
% Anwender zu bevorzugende Art der vollständigen Spezialisierung wird später
% erklärt.
%
% \DescribeOption{type}
% Über einen Aufruf der Form \texttt{type=}\meta{2er-Potenz} wird der
% nummerische Typ der Konsultation festgelegt. \LaTeX\ erlaubt maximal 25
% verschiedene Typen also die Werte: 1, 2, 4, 8, 16, 32, 64, 128, 256, 512,
% 1024, 2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288,
% 1048576, 2097152, 4194304, 8388608, 16777216, 33554432. Bei \KOMAScript{}
% ist zusätzlich der Wert 0 erlaubt, der für nicht gleitende Konsultationen
% steht. Konsulationten, deren nummerischer Typ binär AND verknüpft nicht Null
% ist, können sich gegenseitig nicht überholen. Da der nummerische Typ nicht
% gleitende Konsulationen AND verknüpft mit dem Typ anderen Konsultationen
% immer Null ergibt, können nicht gleitende Konsultationen also von allen
% gleitenden Konsultationen überholt werden und umgekehrt.
%
% Enthält eine Konsultation eine weitere Konsultation (sogenannte
% Unterkonsultationen), so ist der endgültige nummerische Typ der
% übergeordneten Konsultation immer die Oderverknüpfung aller
% Unterkonsultationen mit dem angegebenen nummerischen Typ der übergeordneten
% Konsultation. Zu Unterkonsultationen siehe auch
% Abschnitt~\ref{sec:consult.subconsult}.
%
% Eine Besonderheit stellt der Aufruf \texttt{type=auto} dar. Dabei wird der
% nächste Konsultationstyp verwendet, der noch nicht automatisch vergeben
% wurde.
%
% \DescribeOption{float}
% Über einen Aufruf der Form \texttt{float=}\meta{Position} kann die
% Gleitposition bestimmt werden. Es ist auch möglich über
% \texttt{float=(\meta{Liste der Positionen})} mehr als eine erlaubte Position
% anzugeben. Erlaubte Positionen sind:
% \begin{labeling}[~~--]{\texttt{bottom}}
% \item[\texttt{here}]die Stelle, an der die Gleitumgebung definiert
%   wurde. Ist keine Alternative angegeben wird eine nicht gleitende Umgebung
%   angenommen.
% \item[\texttt{top}]oben auf einer Seite
% \item[\texttt{bottom}]unten auf einer Seite
% \item[\texttt{page}]auf einer eigenen Seite
% \item[\texttt{force}]versucht eine möglichst frühe Ausgabe zu erzwingen
% \end{labeling}
% weitere Platzierungen sind denkbar (etwa \texttt{par} für eine Ausgabe am
% Ende des Absatzes -- also ein verzögertes \texttt{here}).
%
% Es ist nicht sinnvoll diese Option bei einer nicht gleitenden Konsulation
% (\texttt{type=0}) zu verwenden.
%
% \DescribeOption{style}
% Über einen Aufruf der Form \texttt{style=}\meta{Name} kann der Ausgabestil
% der Konsultation festgelegt werden. Ist kein Stil angegeben, so wird der
% Stil \texttt{default} verwendet. Mehr zu Ausgabestilen siehe
% Abschnitt~\ref{sec:consult.output}.
%
% \DescribeOption{setupstyle}
% Über einen Aufruf der Form \texttt{setupstyle=}\meta{Optionen} kann die
% Ausgabe der Konsulation beeinflusst werden. Dies setzt jedoch voraus, dass
% die Ausgabe der Konsultation die angegebenen Optionen auch unterstützt. Mehr
% zur Ausgabe von Konsultationen siehe Abschnitt~\ref{sec:consult.output}.
%
% \DescribeOption{setupcaption}
% Über einen Aufruf der Form \texttt{setuptcaption=}\meta{Optionen} kann die
% Ausgabe der Erklärung beeinflusst werden. Mehr zur Ausgabe der Erklärung von
% Konsulatationen siehe Abschnitt~\ref{sec:consult.caption}.
%
% \DescribeOption{caption}
% Über einen Aufruf der Form \texttt{caption=}\meta{Text} kann der Text der
% Erklärung zu einer Konsultation angegeben werden. Zu beachten ist, dass
% \meta{Text} ein bewegliches Argument ist. Es gelten damit alle
% Einschränkungen für bewegliche Argumente. Sollen Labels für Referenzen
% gesetzt werden, so sollte dies in diesem Argument erfolgen. Es wird
% empfohlen diese Option bei der Definition einer Konsultationsklasse nicht zu
% setzen.
%
% \DescribeOption{listsetup}
% Über einen Aufruf der Form \texttt{listsetup=}\meta{Optionen} kann die
% Ausgabe eines Listeneintrags für die Konsultation beeinflusst
% werden. Mögliche Optionen und mehr zu Listeneinträgen siehe
% Abschnitt~\ref{sec:consult.list}.
%
% \DescribeOption{list}
% Über einen Aufruf der Form \texttt{list=}\meta{Text} wird der Text für den
% Listeneintrag angegeben. Ist die Option ohne Wertübergabe und auch die
% Option \texttt{caption} verwendet, so wird der bei \texttt{caption}
% angegebene \meta{Text} auch für den Listeneintrag verwendet. Dies gilt auch,
% wenn die Option überhaupt nicht verwendet wird. Es wird
% empfohlen diese Option bei der Definition einer Konsultationsklasse nicht zu
% setzen.
%
% \DescribeOption{nolist}
% Dies ist eine Option mit optionalen Werten für einfache Schalter. Wird der
% Schalter aktiviert, so wird kein Listeneintrag geschrieben. Dies gilt auch,
% wenn gleichzeitig die Option \texttt{list} verwendet wird! Es wird
% empfohlen diese Option bei der Definition einer Konsultationsklasse nicht zu
% setzen. Dies ist allenfalls bei abgeleiteten Konsultationen sinnvoll, die
% keine Listeneinträge unterstützen sollen. Allerdings können von diesen dann
% auch keine Konsultationen mehr abgeleitet werden, die Listen unerstützen.
%
%
% \subsection{Ausgabe von Konsultationen}
% \label{sec:consult.output}
%
% Paketautoren können neue Ausgabearten für Konsultationen definieren. Dabei
% sollten sie nach Möglichkeit die Standardeigenschaften für Ausgaben von
% Konsultationen unterstützen.
%
% \DescribeMacro{\newconsultoutput}
% Über einen Aufruf der Form
% \cs{newconsultoutput}\marg{Name}%^^A
% \marg{Begin-Definition}\marg{End-Definition}
% wird eine neue Ausgabeart definiert. Jede der beiden Definitionen kann dabei
% drei Argumente auswerten.
%
% Das erste Argument ist dabei die Summe alle Optionen, die mit
% \cs{setupstyle} bei der Definition der Konsultationsklasse (siehe
% Abschnitt~\ref{sec:consult.class}) oder deren Aufruf (siehe
% Abschnitt~\ref{sec:consult.base}) übergeben wurden. Die Reihenfolge der
% Optionen ist beliebig. Der Ausgabestil hat also bei widersprüchlichen
% Angaben selbst eine Priorität zu definieren. 
%
% Das zweite Argument ist die Summe aller Optionen, die mit \cs{setupcaption}
% bei der Definition der Konsultationsklasse oder deren Aufruf übergeben
% wurden. Die Reihenfolge ist auch hier beliebig.
%
% Das dritte Argument ist die Summe aller anderen Optionen, die für die
% Ausgabe der Konsultation relevant sein könnten.
%
% \meta{Begin-Definition} wird ausgeführt, bevor der Inhalt der
% Konsultationsumgebung gelesen wird. \meta{End-Definition} wird ausgeführt,
% nachdem der Inhalt der Konsultationsumgebung gelesen wurde. Im Gegensatz zu
% \cs{newenvironment} erhält jedoch auch die \meta{End-Definition} die
% Argumente.
%
% Vordefiniert ist die Ausgabeart \texttt{default}. Diese arbeitet generell
% wie die Gleitumgebungen der Standardklassen. Allerdings wertet sie die
% Erklärungsoption \texttt{position} zusätzlich aus. Diese Option legt dabei
% nicht nur fest, ob die Erklärung für \texttt{top}- oder
% \texttt{bottom}-Platzierung formatiert werden soll, sondern platziert auch
% entsprechend. Die Option darf auch als Ausgabestiloption angegeben
% werden. Ist die Option nur als Erklärungsoption oder als Ausgabestiloption
% angegeben wird sie für beides verwendet. Sind eigene Optionen angegeben, so
% werden diese verwendet. Bei widersprüchlicher Angabe wird zusätzlich eine
% Warnung ausgegeben. Weitere Optionen für diesen Stil sind denkbar (etwa
% zusätzliche Ränder, Schriftumschaltung für den Inhalt, \dots).
%
%
% \subsection{Listen von Konsultationen}
% \label{sec:consult.list}
%
% HIER FEHLT NOCH ETWAS!
%
% \subsection{Erklärungen von Konsultationen}
% \label{sec:consult.caption}
%
% Siehe hierzu im Wesentlichen die Anleitung zum Paket \textsl{caption} ab
% Version 3.0. 
%
%
% \subsection{Konsultationsklassen}
% \label{sec:consult.class}
%
% \DescribeMacro{\newconsultation}
% \DescribeMacro{\newconsultation*}
% Über einen Aufruf der Form
% \cs{newconsultation}\marg{Name}\marg{Eigenschaften} wird eine neue
% Konsultation der Klasse \meta{Name} mit den Eigenschaften
% \meta{Eigenschaften} definiert. Ob dabei die neue Konsultation bereits
% ausreichend spezialisiert ist, hängt von den angegebenen Eigenschaften
% ab. Mehr zu den Eigenschaften findet sich im
% Abschnitt~\ref{sec:consult.properties}. Es ist auch zulässig eine andere
% Klasse bei \meta{Eigenschaften} anzugeben. Dabei werden nicht die aktuellen
% Eigenschaften jener Klasse kopiert, sondern bei Verwendung der neuen Klasse
% werden die Eigenschaften der alten Klasse mitverwendet. Dadurch wird eine
% echte Ableitung neuer Klassen von alten möglich. So wie bei \cs{newcommand}
% auch, liegt es in der Verantwortung des Anwenders, Ringabhängigkeiten zu
% vermeiden.
%
% Die Sternvariante der Anweisung definiert gleichzeitig eine Umgebung der
% Art:
% \begin{quote}\raggedright
% \cs{newenvironment}\marg{Name}|[1][]{%|\\
% |  \begin{consultation}[class=|\meta{Name}|,#1]|\\
% |}{|\\
% |  \end{consultation}%|\\
% |}|
% \end{quote}
%
% \DescribeMacro{\cloneconsultation}
% Über einen Aufruf der Form
% \cs{cloneconsultation}\marg{Neuer~Name}\marg{Alter~Name} wird eine neue
% Konsultation definiert, deren Eigenschaften eine Kopie der aktuellen
% Eigenschaften einer vorhandenen Konsultation sind.
%
% \DescribeMacro{\setupconsultation}
% \DescribeMacro{\setupconsultation*}
% Über einen Aufruf der Form
% \cs{setupconsultation}\marg{Name}\marg{Eigenschaften} werden die aktuellen
% Eigenschaften der angegebenen, existierenden Konsultation geändert. Mehr zu
% den Eigenschaften findet sich im Abschnitt~\ref{sec:consult.properties}.
%
% Die Sternvariante der Anweisung definiert gleichzeitig eine Umgebung wie bei
% \cs{newconsultation} beschrieben.
%
%
% \subsection{Unterkonsultationen}
% \label{sec:consult.subconsult}
%
% Konsultationen können geschachtelt werden. Vermutlich werden die Anweisungen
% aus Abschnitt~\ref{sec:consult.class} um ein optionales Argument erweitert,
% um die unterschiedlichen Ebenen derselben Konsultation unterschiedliche zu
% handhaben. Möglicherweise wird das aber auch darüber ermöglicht, dass eine
% Klasse \texttt{foo} bei Aufruf in einer anderen Konsultation automatisch
% zu \texttt{subfoo}, falls \texttt{subfoo} existiert, wird usw. Dies ist noch
% nicht abschließend geklärt.
%
% \subsection{Beispiele}
%
% HIER FEHLT NOCH ETWAS!
%
% \subsection{Implementierung als Paket}
%
% Zunächst wird das Ganze als Paket implementiert. Später wird das
% möglicherweise in den Kernel integriert oder eine Klassenoptions daraus. Das
% hängt letztelich davon ab, ob das Paket unabhängig von \KOMAScript{}
% zuverlässig funktioniert oder dann schlicht der Aufwand zu groß wäre.
%
% \iffalse
%<package&identify>\ProvidesPackage{scrxfloat}[%
%<package&identify>  \KOMAScriptVersion\space KOMA-Script (extended floats)]
%<package&identify>\RequirePackage{scrkbase}[\KOMAScriptVersion]
% \fi
%
% \iffalse
%<*option>
% \fi
%
% \subsection{Option}
% ADD IMPLEMENTATION HERE
%
%
% \iffalse
%</option>
%<*body>
% \fi
%
% \subsection{Body}
% 
% \begin{environment}{consultation}
% Zentrales Element ist die Konsultationsumgebung mit ihrem optionalen
% Argument.
%    \begin{macrocode}
\newenvironment{consultation}[1][]{%
  \set@consultationkeys{#1}%
  \@consultation
}{%
  \end@consultation
}
%    \end{macrocode}
%
% \begin{macro}{\set@consultationkeys}
% Dieses Makro dient dazu alle Optionen einen Konsultation zu setzen. Dabei
% werden die Optionen ggf. zunächst initialisiert, um anschließend prüfen zu
% können, ob der entsprechende Wert gesetzt wurde.
%    \begin{macrocode}
\newcommand*{\set@consultationkeys}[1]{%
%    \end{macrocode}
% \begin{option}{style}
% Der Ausgabestil wird vorab ausgewertet. Es existiert ein Defaultwert. Die
% Option muss jedoch immer einen Wert haben.
%    \begin{macrocode}
  \def\consult@style{default}%
  \define@key{KOMA@flt@init}{style}{%
    \def\consult@style{#1}
  }
%    \end{macrocode}
% \end{option}%^^A style
%
%    \begin{macrocode}
  \setkeys{KOMA@flt@init}{#1}%
}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\@consultation}
% \begin{macro}{\end@consultation}
% Über diese beiden Makros wird die Umgebung \texttt{@consultation}
% definiert. Diese Umgebung benötigt jedoch keine eigene Gruppe, deshalb wird
% nicht \cs{newenvironment} verwendet. In dieser Umgebung wird die eigentliche
% Arbeit geleistet.
%    \begin{macrocode}
\newcommand*{\@consultation}{%
  \show\consult@style
}
\def\end@consultation{%
}
%    \end{macrocode}
% \end{macro}%^^A \@end@consultation
% \end{macro}%^^A \@consultation
% \end{environment}
%
%
% \iffalse
%</body>
% \fi
%
% \Finale
%
\endinput
%
% end of file `scrkxflo.dtx'
%%% Local Variables:
%%% mode: latex
%%% mode: font-lock
%%% TeX-master: t
%%% End:
